/*
다음은 색의 3요소인 red, green, blue로 색을 추상화한 Color클래스를 선언하고 활용하는 코드이다.
1. red, green, blue를 멤버 변수로 가진다. 2. 매개변수없는 생성자
3. 매개변수있는 생성자 (int r, int g, int b)
4. Color의 멤버변수 값을 설정하는
setColor(int r, int g, int b)
5. Color 클래스의 멤버 변수를 출력하는 show()

main에서
1. 빨간색(255, 0, 0)의 screenColor 객체 생성
2. Color 타입의 포인터 변수 p 선언
3. p가 screenColor의 주소를 가지도록 코드 작성
4. p와 show()를 이용하여 screenColor 색 출력
5. Color의 일차원 배열 colors 선언, 원소는 3개
6. p가 colors 배열을 가리키도록 코드 작성
7. p와 setColor를 이용하여 colors[0], colors[1], colors[2]가 빨강 초록, 파랑색 가지도록 코드 작성
8. p와 show를 이용하여 colors 배열의 모든 객체의 색 출력. for 문 작성
*/


#include <iostream>
using namespace std;

class Color{
public:
    int red, green, blue;
    Color();
    Color(int r, int g, int b);
    void setColor(int r, int g, int b);
    void show();
};
Color::Color()
{
    red = 0;
    green = 0;
    blue = 0;
}
Color::Color(int r, int g, int b)
{
    red = r;
    green = g;
    blue = b;
}



void Color :: setColor(int r, int g, int b)
{
    this->red = r;
    this->green = g;
    this->blue = b;
}

void Color :: show()
{
    cout << "Color = " << red << ", " << green << ", " << blue << endl;
}


int main()
{
    Color screenColor(255,0,0);
    Color* p;
    p = &screenColor;
    p->show();
    Color colors[3];
    p = colors;
    p->setColor(255, 0, 0);
    (p+1)->setColor(0, 255, 0);
    (p+2)->setColor(0, 0, 255);
    for (int i = 0; i < 3; i++)
    {
        cout << "colors " << i << " 는 ";
        colors[i].show();
    }
    return 0;
}

